---
interface Props {
  title: string;
  company: string;
  location: string;
  period: string;
  website?: string;
  logo?: string;
  capstone?: string;
  details: {
    title: string;
    items: string[];
  }[];
}

const { title, company, location, period, website, logo, capstone, details } = Astro.props;
---

<div class="education-accordion bg-black/30 dark:bg-gray-800/50 border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden mb-4">
  <div class="p-6">
    <div class="flex justify-between items-start gap-4">
      <div class="space-y-3 md:space-y-4 flex-grow">
        <div class="flex items-center justify-between">
          <h3 class="text-lg md:text-xl font-mono font-bold flex items-center gap-2 text-black dark:text-white">
            {title}
          </h3>
          <button class="education-accordion-toggle p-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 flex-shrink-0 transition-colors">
            <svg class="w-3 h-3 md:w-4 md:h-4 transition-transform duration-300 text-black dark:text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
        </div>
        
        <div class="flex items-center gap-2">
          {logo && (
            <img 
              src={logo.replace('.jpg', '.png').replace('.jpeg', '.png')} 
              alt={`${company} logo`} 
              class="w-4 h-4 md:w-5 md:h-5 object-contain"
              loading="lazy"
            />
          )}
          <a href={website} target="_blank" rel="noopener noreferrer" class="text-blue-600 dark:text-blue-400 hover:underline font-mono text-base md:text-lg">
            {company}
          </a>
        </div>

        <div class="font-mono flex items-center gap-2 text-black dark:text-white text-base md:text-lg">
          <span role="img" aria-label="location">üìç</span> {location}
          <span class="mx-2">¬∑</span>
          <span role="img" aria-label="duration">‚åö</span> {period}
        </div>

        {capstone && (
          <div class="font-mono text-base md:text-lg">
            <span role="img" aria-label="capstone">üéì</span> <span set:html={capstone} />
          </div>
        )}
      </div>
    </div>

    <div class="education-accordion-content hidden mt-4 md:mt-6 border-t border-gray-200 dark:border-gray-700 pt-4 md:pt-6 space-y-4 md:space-y-6">
      {details.map((section) => (
        <div>
          <h4 class="text-base md:text-xl font-mono font-bold mb-2 md:mb-3 text-black dark:text-white">{section.title}</h4>
          <ul class="list-disc ml-4 space-y-1.5 md:space-y-2">
            {section.items.map((item) => (
              <li class="font-mono text-gray-600 dark:text-gray-300 text-sm md:text-lg">{item}</li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  </div>
</div>

<script>
  document.addEventListener('astro:page-load', () => {
    const accordions = document.querySelectorAll('.education-accordion');
    
    accordions.forEach(accordion => {
      const toggle = accordion.querySelector('.education-accordion-toggle');
      const content = accordion.querySelector('.education-accordion-content');
      const arrow = toggle?.querySelector('svg');
      
      toggle?.addEventListener('click', () => {
        content?.classList.toggle('hidden');
        arrow?.classList.toggle('rotate-180');
      });
    });
  });
</script>

<style>
  .education-accordion {
    transition: all 0.3s ease;
  }
  
  .education-accordion-toggle svg {
    transition: transform 0.3s ease;
  }
</style> 