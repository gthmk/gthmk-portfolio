---
interface Detail {
  title: string;
  items: string[];
}

interface Props {
  title: string;
  company: string;
  location: string;
  period: string;
  website?: string;
  logo?: string;
  description?: string | JSX.Element;
  details: Detail[];
}

const { title, company, location, period, website, logo, description, details } = Astro.props;

const getRoleEmoji = (title: string) => {
  if (title.toLowerCase().includes('engineer')) return '👨‍💻';
  if (title.toLowerCase().includes('intern')) return '🎓';
  if (title === "Consultant → Director") return '👔';
  if (title === "Associate → Consultant") return '👨‍💻';
  if (title.toLowerCase().includes('research associate')) return '🔍';
  return '👨‍💻';
};

const roleEmoji = getRoleEmoji(title);
---

<div class="work-accordion bg-black/[0.03] hover:bg-black/[0.06] dark:bg-white/[0.03] dark:hover:bg-white/[0.06] border border-black/[0.07] dark:border-white/[0.07] rounded-lg overflow-hidden mb-4">
  <div class="p-4 md:p-6">
    <div class="flex justify-between items-start gap-4">
      <div class="space-y-3 md:space-y-4 flex-grow">
        <div class="flex items-center justify-between">
          <h3 class="text-sm md:text-xl font-mono font-bold flex items-center gap-2 text-black/80 dark:text-white/80">
            <span role="img" aria-label="role">{roleEmoji}</span> {title}
          </h3>
          <button class="accordion-toggle p-1 rounded-full hover:bg-black/10 dark:hover:bg-white/10 flex-shrink-0 transition-colors">
            <svg class="w-3 h-3 md:w-4 md:h-4 transition-transform duration-300 text-black/60 dark:text-white/60" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
        </div>
        
        <div class="flex items-center gap-2">
          {logo && (
            <img 
              src={logo.replace('.jpg', '.png').replace('.jpeg', '.png')} 
              alt={`${company} logo`} 
              class="w-4 h-4 md:w-5 md:h-5 object-contain"
              loading="lazy"
            />
          )}
          <a href={website} target="_blank" rel="noopener noreferrer" class="text-sm md:text-lg font-mono text-blue-600 dark:text-blue-400 hover:underline">
            {company}
          </a>
        </div>

        <div class="font-mono flex items-center gap-2 text-sm md:text-lg text-black/70 dark:text-white/70">
          <span role="img" aria-label="location">📍</span> {location}
          <span class="mx-2">·</span>
          <span role="img" aria-label="duration">⌚</span> {period}
        </div>

        <p class="font-mono text-sm md:text-lg text-black/70 dark:text-white/70">
          {typeof description === 'string' ? description : <>{description}</>}
        </p>
      </div>
    </div>

    <div class="accordion-content hidden mt-4 md:mt-6 border-t border-black/[0.07] dark:border-white/[0.07] pt-4 md:pt-6 space-y-4 md:space-y-6">
      {details.map((section) => (
        <div>
          <h4 class="text-sm md:text-xl font-mono font-bold mb-2 md:mb-3 text-black/80 dark:text-white/80">{section.title}</h4>
          <ul class="list-disc ml-4 space-y-1.5 md:space-y-2">
            {section.items.map((item) => (
              <li class="font-mono text-sm md:text-lg text-black/70 dark:text-white/70">{item}</li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  </div>
</div>

<script>
  document.addEventListener('astro:page-load', () => {
    const accordions = document.querySelectorAll('.work-accordion');
    
    accordions.forEach(accordion => {
      const toggle = accordion.querySelector('.accordion-toggle');
      const content = accordion.querySelector('.accordion-content');
      const arrow = toggle?.querySelector('svg');
      
      toggle?.addEventListener('click', () => {
        content?.classList.toggle('hidden');
        arrow?.classList.toggle('rotate-180');
      });
    });
  });
</script>

<style>
  .work-accordion {
    transition: all 0.3s ease;
  }
  
  .accordion-toggle svg {
    transition: transform 0.3s ease;
  }
</style> 