---
interface Props {
  title: string;
  company: string;
  location: string;
  period: string;
  website?: string;
  logo?: string;
  description?: string;
  details: {
    title: string;
    items: string[];
  }[];
}

const { title, company, location, period, website, logo, description, details } = Astro.props;

const getRoleEmoji = (title: string) => {
  if (title.toLowerCase().includes('engineer')) return '👨‍💻';
  if (title.toLowerCase().includes('intern')) return '🎓';
  if (title === "Consultant → Director") return '👔';
  if (title === "Associate → Consultant") return '👨‍💻';
  if (title.toLowerCase().includes('research associate')) return '🔍';
  return '👨‍💻'; // default fallback
};

const roleEmoji = getRoleEmoji(title);
---

<div class="experience-accordion border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden mb-6 bg-black bg-opacity-30">
  <div class="p-6">
    <div class="flex justify-between items-start gap-4">
      <div class="space-y-4 flex-grow">
        <div class="flex items-center justify-between">
          <h3 class="text-lg font-mono flex items-center gap-2">
            <span role="img" aria-label="role">{roleEmoji}</span> {title}
          </h3>
          <button class="accordion-toggle p-1 rounded-full hover:bg-gray-800 flex-shrink-0">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
        </div>
        
        <div class="flex items-center gap-2">
          {logo && (
            <img 
              src={logo.replace('.jpg', '.jpeg')} 
              alt={`${company} logo`} 
              class="w-5 h-5 object-contain"
              loading="lazy"
            />
          )}
          <a href={website} target="_blank" rel="noopener noreferrer" class="text-blue-400 hover:underline font-mono">
            {company}
          </a>
        </div>

        <div class="font-mono flex items-center gap-2">
          <span role="img" aria-label="location">📍</span> {location}
          <span class="mx-2">·</span>
          <span role="img" aria-label="duration">⌚</span> {period}
        </div>

        <p class="font-mono text-gray-300">
          {company === "GetReal Labs Inc." ? 
            <>Founding engineering team member at a cybersecurity and digital forensics startup incubated by <a href="https://ballisticventures.com/" target="_blank" rel="noopener noreferrer" class="text-blue-400 hover:underline">Ballistic Ventures</a> and <a href="https://farid.berkeley.edu/" target="_blank" rel="noopener noreferrer" class="text-blue-400 hover:underline">Dr. Hany Farid</a></> : 
            description
          }
        </p>
      </div>
    </div>
  </div>

  <div class="accordion-content hidden">
    <div class="border-t border-gray-700 p-6 space-y-6">
      {details.map((section) => (
        <div>
          <h4 class="text-lg font-mono font-semibold mb-3">{section.title}</h4>
          <ul class="list-disc ml-4 space-y-2">
            {section.items.map((item) => (
              <li class="font-mono text-gray-300">{item}</li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  </div>
</div>

<script>
  document.querySelectorAll('.accordion-toggle').forEach(button => {
    button.addEventListener('click', () => {
      const accordion = button.closest('.experience-accordion');
      if (!accordion) return;
      
      const content = accordion.querySelector('.accordion-content');
      if (!content) return;
      
      const isExpanded = content.classList.contains('hidden');
      
      // Toggle the content
      content.classList.toggle('hidden');
      
      // Rotate the arrow
      const arrow = button.querySelector('svg');
      if (arrow) {
        arrow.style.transform = isExpanded ? 'rotate(180deg)' : 'rotate(0)';
      }
    });
  });
</script>

<style>
  .experience-accordion {
    transition: all 0.3s ease;
  }
  
  .accordion-toggle svg {
    transition: transform 0.3s ease;
  }
</style> 